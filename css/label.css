:where(label, fieldset) {
	font-size: var(--label-fz, initial);
	width: var(--label-w, 100%);
}

:where(label > abbr) {
	color: var(--required-color);
	margin-inline: 0.125ch 1ch;
}

:where(label small) { display: block; }

:where(label > input:not([type="checkbox"]):not([type="radio"]), label > details[data-bs~="select"], label > select, label > textarea) {
	margin-block-start: var(--input-gap);
}

:where(label > input[type="file"]) { display: block; }

/* Ticks for range */
:where(label[data-bs*="ticks"]) {
	--ticks-bdw: 1px;
	--ticks-c: var(--ticks-bdc, var(--input-bdc));
	--ticks-count: 6;
	--ticks-h: 10px;
	position: relative;
}
/* TODO! FIX, WHEN LABEL TEXT BREAKS TO 2 LINES */
:where(label[data-bs*="ticks"])::after {
	--ticks-unit: calc((100% - var(--input-thumb-h) + var(--ticks-bdw)) / var(--ticks-count));
	background-image: linear-gradient(90deg, var(--ticks-c) 0 var(--ticks-bdw), transparent 0 var(--ticks-unit));
	background-position: calc(var(--input-thumb-h) / 2 - var(--ticks-bdw)) 50%;
	background-repeat: repeat-x;
	background-size: calc(var(--ticks-unit) - (var(--ticks-bdw) / var(--ticks-count))) calc(var(--ticks-h) / 2);
	content: "";
	display: block;
	block-size: 100%;
	inline-size: 100%;
	inset-block-start: 50%;
	inset-inline-start: 0;
	position: absolute;
	z-index: -1;
}

:where(label[data-bs*="3-ticks"]) { --ticks-count: 2; }
:where(label[data-bs*="4-ticks"]) { --ticks-count: 3; }
:where(label[data-bs*="5-ticks"]) { --ticks-count: 4; }
:where(label[data-bs*="6-ticks"]) { --ticks-count: 5; }
:where(label[data-bs*="7-ticks"]) { --ticks-count: 6; }
:where(label[data-bs*="8-ticks"]) { --ticks-count: 7; }
:where(label[data-bs*="9-ticks"]) { --ticks-count: 8; }
:where(label[data-bs*="10-ticks"]) { --ticks-count: 9; }
:where(label[data-bs*="11-ticks"]) { --ticks-count: 10; }
:where(label[data-bs*="12-ticks"]) { --ticks-count: 11; }