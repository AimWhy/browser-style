@import 'input.range.css';

:where(input, option, select, textarea) {
	--_h: calc(var(--input-fz) * var(--body-lh) + var(--input-pb) * 2 + (var(--input-bdw) * 2));
	accent-color: var(--accent-color);
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	
	font-family: inherit;
	font-size: var(--input-fz, 1rem);
	inline-size: 100%;
	max-inline-size: 100%;
}

:where(input:not([type="range"]), select, textarea) {
	--input-trs: .2s cubic-bezier(.1, 0, .9, 1);
	background-color: var(--input-bgc);
	border-color: var(--input-bdc);
	border-radius: var(--input-bdrs);
	border-style: var(--input-bds);
	border-width: var(--input-bdw);
}

:where(input:not([type="checkbox"],[type="file"],[type="radio"],[type="range"]), option, select, textarea) {
	--icon-mie: .75em;
	--icon-mis: 1ch;
	--icon-sz: 1.5em;
	block-size: var(--_h);
	color: var(--input-c);
	inline-size: var(--input-w, 100%);
	padding-block: var(--input-pb);
	padding-inline: var(--input-pi);
	position: relative;
}

:where(input:indeterminate) { background: var(--gray-1) var(--icon-minus) center center no-repeat; }

/*
================
 Specific Types
================
*/

/* <input type="checkbox">, <input type="radio"> */
:where([type="checkbox"],[type="radio"]) {
	--input-bdw: 2px;
	--input-h: 1.5em;
	block-size: var(--input-h);
	cursor: pointer;
	inline-size: var(--input-h);
	margin-block-start: -0.125em;
	margin-inline-end: var(--input-pi);
	vertical-align: text-top;
}
:where([type="checkbox"]:not([role="switch"]):checked) {
	background: var(--accent-color) var(--icon-check-light) center center no-repeat;
	background-size: 1em;
	border-color: var(--accent-color);
}
:where([type="checkbox"][role="switch"]) {
	background-color: var(--input-switch-bgc);
	border-radius: var(--input-h);
	inline-size: calc(1.8 * var(--input-h));
	position: relative;
}
:where([type="checkbox"][role="switch"])::before {
	aspect-ratio: 1 / 1;
	background-color: var(--input-switch-c);
	border-radius: 50%;
	content: "";
	display: block;
	inline-size: calc(var(--input-h) - (var(--input-bdw) * 2));
	transition: margin var(--input-trs);
}
:where([type="checkbox"][role="switch"]:checked) {
	background-color: var(--accent-color);
	border-color: var(--accent-color);
}
:where([type="checkbox"][role="switch"]:checked)::before {
	/* TODO! */
	margin-inline-start: calc(var(--input-h) - (var(--input-bdw) * 2) / 0.75);
}

/* <input type="color"> */
:where([type="color"]) { padding-inline: var(--input-pb); }
:where([type="color"])::-webkit-color-swatch-wrapper { padding: 0; }
:where([type="color"])::-webkit-color-swatch { border-radius: var(--input-bdrs); }

/* <input type="date">, <input type="datetime-local">, <input type="month">, <input type="week">  */
:where(input:not([type="search"]))::-webkit-calendar-picker-indicator {
	opacity: 0;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin: calc(var(--icon-sz) * -1);
}

/* <input type="file"> */
:where([type=file])::file-selector-button {
	-webkit-appearance: none;
	background-color: var(--file-button-bgc);
	block-size: var(--_h);
	border-radius:  var(--input-bdrs) 0 0 var(--input-bdrs);
	border-color: var(--input-bdc);
	border-style: var(--input-bds, solid);
	border-width: 0px var(--input-bdw) 0px 0px;
	font-size: var(--input-fz, inherit);
	font-weight: var(--button-fw, 400);
	margin-inline-end: var(--input-pi);
	padding-block: var(--input-pb);
	padding-inline: var(--input-pi);
}
:where([capture]) {
	border: 0;
	color: rgba(0, 0, 0, 0);
	position: relative;
}
:where([capture])::file-selector-button,
:where([capture])::before {
	background-color: var(--accent-color);
	background-image: url('/svg/camera-selfie.svg');
	background-size: 2.5em;
	background-position: 1ch center;
	background-repeat: no-repeat;
	border-radius: inherit;
	color: var(--accent-text-color);
	border: 0;
	width: 100%;
}
:where([capture])::before {
	content: attr(aria-label);
	display: grid;
	inset: 0;
	place-content: center;
	position: absolute;
}
:where([capture="environment"])::before { background-image: url('/svg/camera.svg'); }

/* <input type="radio"> */
:where([type="radio"]) { border-radius: 50%; }
:where([type="radio"]:checked) {
	--input-bdw: var(--input-radio-bdw, .45em);
	border-color: var(--accent-color);
}

/* <input type="search"> */
:where([type="search"])::-webkit-list-button,
:where([type="search"])::-webkit-calendar-picker-indicator {
	background-color: #9e9e9e;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin-block: 0;
	margin-inline: 0 -0.75em;
	mask-image: var(--icon-chevron-down);
	mask-repeat: no-repeat;
	-webkit-mask-repeat: no-repeat;
	-webkit-appearance: none;
	-webkit-mask-image: var(--icon-chevron-down);
}
/* Search reset-button */
:where([type="search"])::-webkit-search-cancel-button {
	background-color: currentColor;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin: 0;
	mask-image: var(--icon-reset);
	position: absolute;
	inset-inline-end: 0.75em;
	-webkit-appearance: none;
	-webkit-mask-image: var(--icon-reset);
}
/* Combination: Search reset-button AND datalist dropdown-button */
:where([type="search"][list])::-webkit-search-cancel-button { inset-inline-end: 2.5em; }

/* <select>, <optgroup>, <option> */
:where(select:not([size])) { --icon: var(--select-icon, var(--icon-chevron-down)); }

/* Target non-Safari only */
/* @supports (contain: paint) { */
	:where(select[size]) {
		block-size: calc(var(--_sz, 1) * var(--_h));
		overflow: hidden;
		padding: 0;
	}
	:where(optgroup) { font-style: normal; }
	:where(optgroup)::before { 
		background-color: var(--optgroup-bgc);
		color: var(--optgroup-c);
		content: attr(label);
		display: block;
		height: var(--_h);
		padding: 1em var(--input-pi);
	}
	:where(option) { padding-block-start: 1em; }
	:where(option:not(:last-of-type)) { border-block-end: var(--input-bdw) solid var(--input-bdc); }
	:where(option:checked) {
		--icon: var(--icon-checkmark);
		background-color: var(--option-checked-bgc);
	}
	:where(optgroup > option)::before { display: none; }
	:where(optgroup option:first-of-type) { margin-block-start: -1.25em }
	:where(optgroup option:not(:checked)) { background-color: var(--input-bgc); }
/* } */

/* <textarea> */
:where(textarea) { resize: vertical; }
:where(textarea[rows="2"]) { min-block-size: calc(2 * var(--_h)); }
:where(textarea[rows="3"]) { min-block-size: calc(3 * var(--_h)); }
:where(textarea[rows="4"]) { min-block-size: calc(4 * var(--_h)); }

/* Icons */
:where([data-icon~="end"]) { padding-inline-end: calc(var(--icon-sz) + calc(var(--icon-mie) + var(--icon-mis))); }
:where([data-icon~="start"]) { padding-inline-start: calc(var(--icon-sz) + calc(var(--icon-mie) + var(--icon-mis))); }

/* Validation Patterns */
input:required:not(:focus-visible):not(:placeholder-shown):invalid {
	--input-bdc: var(--input-invalid-bdc);
	--input-bgc: var(--input-invalid-bgc);
}

input[data-bs~="live"]:required:not(:placeholder-shown):invalid {
	--input-bdc: var(--input-invalid-bdc);
	--input-bgc: var(--input-invalid-bgc);
	--icon: var(--icon-alert);
}

input[data-bs~="live"]:required:not(:placeholder-shown):invalid ~ :is(span, small),
input:required:not(:focus-visible):not(:placeholder-shown):invalid ~ :is(span, small) {
	--icon: var(--icon-alert);
	color: var(--input-invalid-c);
	opacity: 1;
}

input[data-bs~="valid"]:required:not(:placeholder-shown):valid { --icon: var(--icon-checkmark); }

/*
========================
 Browser-specific hacks
========================
*/

/* Target Firefox */
/* FIX: option:checked in Firefox */
@-moz-document url-prefix() {
	:where(optgroup option:first-of-type) { margin-block-start: 0; }
}

/* Target Safari */
@media not all and (min-resolution:.001dpcm) {
	@supports (-webkit-appearance:none) and (display:flow-root) {
		:where(input[type="search"])::-webkit-list-button {
			margin-inline: 0;
		}
		:where(select[size]) {
			block-size: auto;
		}
	}
}

/* Target Mobile Safari */
@supports (-webkit-touch-callout: none) {
	:where(input[type="search"])::-webkit-list-button {
		margin-inline-end: -.5em;
	}

	:where(select[size]) {
		--icon: var(--select-icon, var(--icon-chevron-down));
		block-size: var(--_h);
		overflow: hidden;
		padding: var(--input-pi);
	}
}