[data-css-icon] {
	--cssico-hover-bgc: var(--color-gray-4);
	--cssico-hover-c: var(--color-gray-9);

	--cssico-animdur: .3s;
	--cssico-animtf: ease-in;
	--cssico-bdw: 2px;
	--cssico-bs: 2.75rem; /* block-size is OUTER wrapper width */
	--cssico-c: currentcolor;
	--cssico-is: 1em;	/* inner-size is for INNER icon width (*2) */

	align-items: center;
	background-color: var(--cssico-bgc, transparent);
	block-size: var(--cssico-bs);
	border-radius: var(--cssico-bdrs, 50%);
	box-sizing: content-box;
	display: inline-flex;
	inline-size: var(--cssico-bs);
	justify-content: center;
	position: relative;
	transition:
		var(--cssico-trsp, background-color)
		var(--cssico-animdur)
		var(--cssico-animtf);
}
[data-css-icon]::after,
[data-css-icon]::before {
	background-color: var(--_bgc, transparent);
	block-size: var(--_bs, var(--cssico-is));
	border-color: var(--_bdc, transparent);
	border-radius: 0;
	border-style: solid;
	border-width: var(--_bdw, 0);
	box-sizing: border-box;
	clip-path: var(--_clp, none);
	content: "";
	display: inline-block;
	inline-size: var(--_is, var(--cssico-is));
	position: var(--_pos, relative);
	transform: var(--_trf, none);
	transform-origin: var(--_trfo, 50% 50%);
	transition: all 
		var(--cssico-animdur)
		var(--cssico-animtf);
}
[data-css-icon]::before { content: var(--_cnt); }

/* CHEVRONS / TRIANGLES */
[data-css-icon*="chv-"]::after,
[data-css-icon*="check"]::after {
	--_bdc: var(--cssico-c);
	--_bdw: 0 var(--cssico-bdw) var(--cssico-bdw) 0;
	--_tra: calc(0px - (var(--cssico-is) / 6));
	--_trf: rotate(45deg) translate(var(--_tra), var(--_tra));
}

[data-css-icon*="tri-"]::after {
	--_bgc: var(--cssico-c);
	--_clp: polygon(10% 20%, 50% 90%, 90% 20%);
}
[data-css-icon*="-left"] { transform: rotate(90deg); }
[data-css-icon*="-right"] { transform: rotate(-90deg); }
[data-css-icon*="-up"] { transform: rotate(180deg); }

/* LINES: MINUS, PLUS, EQUALS */
[data-css-icon*="equals"]::after,
[data-css-icon*="equals"]::before,
[data-css-icon*="cross"]::after,
[data-css-icon*="cross"]::before,
[data-css-icon*="minus"]::after,
[data-css-icon*="plus"]::after,
[data-css-icon*="plus"]::before {
	/* `inline-size` need to be the diagonal of the down-arrow side-length (width): sqrt(2) * width. */
	--_bgc: var(--cssico-c);
	--_bs: var(--cssico-bdw);
	--_cnt: '';
	--_is: calc(var(--cssico-is) * 1.4142135623730950488016887242097);
	--_pos: absolute;
}
[data-css-icon*="cross"]::after { --_trf: rotate(45deg); }
[data-css-icon*="cross"]::before { --_trf: rotate(135deg); }
[data-css-icon*="cross-turn"]::after { --_trf: rotate(0deg); }
[data-css-icon*="cross-turn"]::before,
[data-css-icon*="plus"]::before { --_trf: rotate(90deg); }
[data-css-icon*="equals"] { --dist: calc(var(--cssico-is) / 4); }
[data-css-icon*="equals"]::after { --_trf: translateY(var(--dist)); }
[data-css-icon*="equals"]::before { --_trf: translateY(calc(0px - var(--dist))); }

[data-css-icon*="check"]::after {
	--_bs: calc(var(--cssico-is) * 1.15);
	--_is: calc(var(--cssico-is) / 1.65);
}

/* MODIFIERS */
[data-css-icon*="outline"] {
	border: var(--cssico-bdw) solid var(--cssico-c);
	box-sizing: border-box;
}
[data-css-icon*="fill"] {
	--cssico-bgc: var(--color-gray-2);
	--c: var(--color-gray-9);
}
[data-css-icon*="square"] {
	--cssico-bdrs: 5px;
}

/* STATES: details[open] */
[open] > summary > [data-css-icon*="chv-down"]::after { --_tra: calc(var(--cssico-is) / 6); --_trf: rotate(45deg) translate(var(--_tra), var(--_tra)) scale(-1);}
[open] > summary > [data-css-icon*="chv-right"]::after { --_trf: rotate(135deg) translate(var(--_tra), var(--_tra)); }
[open] > summary > [data-css-icon*="cross-turn"]::after { --_trf: rotate(45deg); }
[open] > summary > [data-css-icon*="cross-turn"]::before { --_trf: rotate(135deg); }
[open] > summary > [data-css-icon*="equals"]::after  { --_trf: rotate(-45deg); }
[open] > summary > [data-css-icon*="equals"]::before { --_trf: rotate(45deg); }
[open] > summary > [data-css-icon*="plus"]::after { --_trf: rotate(180deg); }
[open] > summary > [data-css-icon*="plus"]::before { --_trf: rotate(-0deg); }
[open] > summary > [data-css-icon*="tri-down"]::after { --_trf: scale(-1); }
[open] > summary > [data-css-icon*="tri-right"]::after { --_trf: rotate(90deg); }

@media (hover: hover) {
	[data-css-icon]:not([data-css-icon*="outline"]):hover {
		--cssico-bgc: var(--cssico-hover-bgc);
		--cssico-c: var(--cssico-hover-c);
	}
}