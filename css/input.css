@import 'input.range.css';

:where(input, select, textarea) {
	--_h: calc(var(--input-fz) * var(--body-lh) + var(--input-pb) * 2 + var(--input-bdw) * 2);
	accent-color: var(--accent-color);
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	font-family: inherit;
	font-size: var(--input-fz, 1rem);
}

:where(input:not([type="file"]):not([type="range"]), select, textarea) {
	--input-trs: .2s cubic-bezier(.1, 0, .9, 1);
	background-color: var(--input-bgc);
	border-color: var(--input-bdc);
	border-radius: var(--input-bdrs);
	border-style: var(--input-bds);
	border-width: var(--input-bdw);
}

:where(input:not([type="checkbox"]):not([type="file"]):not([type="radio"]):not([type="range"]), option, select, textarea) {
	--icon-mie: .75em;
	--icon-mis: 1ch;
	--icon-sz: 1.5em;
	block-size: var(--_h);
	inline-size: var(--input-w, 100%);
	padding-block: var(--input-pb);
	padding-inline: var(--input-pi);
	position: relative;
}

:where(input:indeterminate) { background: var(--gray-1) var(--icon-minus) center center no-repeat; }

/* Specific Types */
:where(input[type="checkbox"], input[type="radio"]) {
	--input-bdw: 2px;
	--input-h: 1.5em;
	block-size: var(--input-h);
	cursor: pointer;
	inline-size: var(--input-h);
	margin-block-start: -0.125em;
	margin-inline-end: var(--input-pi);
	vertical-align: text-top;
}
:where(input[type="checkbox"]:not([role="switch"]):checked) {
	background: var(--accent-color) var(--icon-checkbox) center center no-repeat;
	background-size: 1em;
	border-color: var(--accent-color);
}
:where(input[type="checkbox"][role="switch"]) {
	background-color: var(--input-switch-bgc, var(--gray-5));
	border-radius: var(--input-h);
	inline-size: calc(1.8 * var(--input-h));
	position: relative;
}
:where(input[type="checkbox"][role="switch"])::before {
	aspect-ratio: 1 / 1;
	background-color: var(--input-switch-c, #fff);
	border-radius: 50%;
	content: "";
	display: block;
	inline-size: calc(var(--input-h) - (var(--input-bdw) * 2));
	transition: margin var(--input-trs);
}
:where(input[type="checkbox"][role="switch"]:checked) {
	background-color: var(--accent-color);
	border-color: var(--accent-color);
}
:where(input[type="checkbox"][role="switch"]:checked)::before {
	margin-inline-start: calc(var(--input-h) - (var(--input-bdw) * 2) / 0.9);
}
:where(input[type="color"]) { padding-inline: var(--input-pb); }
:where(input[type="color"])::-webkit-color-swatch-wrapper { padding: 0; }
:where(input[type="color"])::-webkit-color-swatch { border-radius: var(--input-bdrs); }
:where(input[type="radio"]) { border-radius: 50%; }
:where(input[type="radio"]:checked) {
	--input-bdw: var(--input-radio-bdw, .45em);
	border-color: var(--accent-color);
}
:where(textarea) {
	--textarea-sz: calc(var(--input-fz) * var(--body-lh) + var(--input-pb) * 2 + var(--input-bdw) * 2);
	min-block-size: var(--textarea-sz);
	resize: vertical;
}
:where(textarea[rows="4"]) { min-block-size: calc(2 * var(--textarea-sz)); }

/* Select */
:where(select:not([size])) { --icon: var(--icon-chevron-down); }
:where(select[size]) {
	block-size: calc(var(--_sz, 1) * var(--_h));
	overflow: hidden;
	padding: 0;
}
:where(select[is][size]) {
	--_sz: 4;
	box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1), 0px 4px 6px -2px rgba(0, 0, 0, 0.05);
	inset-block-start: 100%;
	inset-inline-start: 0;
	isolate: ;
	overflow-y: auto;
	padding: 0;
	position: absolute;
	z-index: 1;
}
:where(option) { padding-block-start: 1em; }
:where(option:not(:last-of-type)) { border-block-end: 1px solid var(--input-bdc); }
/* :where(option[selected]) { background-color: var(--accent-color); color: var(--accent-text-color); } */

/* Icons */
:where(input[data-icon~="end"]) { padding-inline-end: calc(var(--icon-sz) + calc(var(--icon-mie) + var(--icon-mis))); }
:where(input[data-icon~="start"]) { padding-inline-start: calc(var(--icon-sz) + calc(var(--icon-mie) + var(--icon-mis))); }

/* Style/Hide browser-specific shadowDOM elements */
/* date, datetime-local, month, week  */
:where(input:not([type="search"]))::-webkit-calendar-picker-indicator {
	opacity: 0;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin: calc(var(--icon-sz) * -1);
}

/* File Button */
:where(input[type=file])::file-selector-button {
	block-size: calc(var(--input-fz) * var(--body-lh) + var(--input-pb) * 2 + var(--input-bdw) * 2);
	border-radius: var(--button-bdrs, var(--input-bdrs, initial));
	border-color: var(--button-bdc, transparent);
	border-style: var(--button-bds, solid);
	border-width: var(--button-bdw, var(--input-bdw, initial));
	font-size: var(--input-fz, inherit);
	font-weight: var(--button-fw, 400);
	padding-block: var(--input-pb);
	padding-inline: var(--input-pi);
}

/* Datalist dropdown-button */
:where(input[type="search"])::-webkit-list-button,
:where(input[type="search"])::-webkit-calendar-picker-indicator {
	background-color: #9e9e9e;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin-block: 0;
	margin-inline: 0 -0.75em;
	mask-image: var(--icon-chevron-down);
	mask-repeat: no-repeat;
	-webkit-mask-repeat: no-repeat;
	-webkit-appearance: none;
	-webkit-mask-image: var(--icon-chevron-down);
}

/* Search reset-button */
:where(input[type="search"])::-webkit-search-cancel-button {
	background-color: currentColor;
	block-size: var(--icon-sz);
	inline-size: var(--icon-sz);
	margin: 0;
	mask-image: var(--icon-reset);
	position: absolute;
	inset-inline-end: 0.75em;
	-webkit-appearance: none;
	-webkit-mask-image: var(--icon-reset);
}

/* Combination: Search reset-button AND datalist dropdown-button */
:where(input[type="search"][list])::-webkit-search-cancel-button { inset-inline-end: 2.5em; }

/* Validation Patterns */
input:required:not(:focus-visible):not(:placeholder-shown):invalid {
	--input-bdc: var(--color-danger);
	--input-bgc: var(--input-invalid);
}

input[data-bs~="live"]:required:not(:placeholder-shown):invalid {
	--input-bdc: var(--color-danger);
	--input-bgc: var(--input-invalid);
	--icon: var(--icon-alert);
}

input[data-bs~="live"]:required:not(:placeholder-shown):invalid ~ :is(span, small),
input:required:not(:focus-visible):not(:placeholder-shown):invalid ~ :is(span, small) {
	--icon: var(--icon-alert);
	color: var(--color-danger);
	opacity: 1;
}

input[data-bs~="valid"]:required:not(:placeholder-shown):valid { --icon: var(--icon-checkmark); }

/* Target Safari */
@media not all and (min-resolution:.001dpcm) {
	@supports (-webkit-appearance:none) and (display:flow-root) {
		:where(input[type="search"])::-webkit-list-button {
			margin-inline: 0;
		}
	}
}

/* Target Mobile Safari */
@supports (-webkit-touch-callout: none) {
	:where(input[type="search"])::-webkit-list-button {
		margin-inline-end: -.5em;
	}
}