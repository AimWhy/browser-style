fieldset[data-bs*="-group"] {
	/* these are for buttongroup `<span>`-elements after checkbox/radio */
	--_bdw: 0px;
	--_bdc: var(--fieldset-bdc);
	--_bdrs: 0px;
	--_bdrv: calc(var(--fieldset-bdrs) - var(--fieldset-bdw));
	--_bxsh: var(--input-bxsh);
	--_gap: 1ch;
	--_hover-bg: var(--color-gray-1);
	--_hover-bg-checked: var(--color-gray-3);
	--_hover-c-checked: var(--color-gray-9);
	--_jc: center;

	--buttongroup-checked-bg: var(--color-gray-3);
	--buttongroup-checked-c: var(--color-text);
	--fieldset-bdw: 1px;
	--fieldset-pab: 0px;
	--fieldset-pi: 0px;
	--fieldset-bs: var(--input-bs);
	--fieldset-gcg: 0px;
	user-select: none;
}
fieldset[data-bs*="-group"] label {
	--label-gap: var(--_gap);
	--label-gtc: unset;
}
:where(fieldset[data-bs*="-group"] :is(input + span, [data-bs*="icon-toggle"] span)) {
	align-items: center;
	background: var(--_bg, transparent);
	border-color: var(--_bdc);
	border-radius: var(--_bdrs);
	border-style: var(--fieldset-bds);
	border-width: var(--_bdw);
	box-shadow: inset 0 0 0 var(--_bxshsz, 0px) var(--_bxsh);
	color: var(--_c, inherit);
	display: flex;
	justify-content: var(--_jc);
	padding-block: var(--_pab, 0px);
	padding-inline: var(--_pi, 1ch);
	text-align: var(--_jc);
	transition: all .3s ease-in-out;
}
fieldset[data-bs*="-group"]:not([data-bs~="rounded"]):not([data-bs~="split"]):not([data-bs~="vertical"]) label:first-of-type span { 
	--_bdrs: var(--_bdrv) 0 0 var(--_bdrv);
}
fieldset[data-bs*="-group"]:not([data-bs~="rounded"]):not([data-bs~="split"]):not([data-bs~="vertical"]) label:last-of-type span { 
	--_bdrs: 0 var(--_bdrv) var(--_bdrv) 0;
}
fieldset[data-bs*="-group"]:not([data-bs*="tab-"]):not([data-bs~="rounded"]):not([data-bs~="split"]):not([data-bs~="vertical"]) label:not(:last-of-type) > span {
	--_bdw: 0 1px 0 0;
}

fieldset[data-bs*="-group"] :checked + span,
fieldset[data-bs*="-group"] label[data-bs~="icon-toggle"] :checked +*+* {
	/* --_bdca: var(--buttongroup-checked-c); */
	--_bg: var(--buttongroup-checked-bg);
	--_c: var(--buttongroup-checked-c);
}
fieldset[data-bs*="-group"]:is([data-bs~="primary"],[data-bs~="secondary"]) [type="checkbox"]:checked ~ span {
	/* --_bdc: var(--fieldset-bgc, #FFF); */
	--_bdc: rgba(255, 255, 255, .6);
}
fieldset[data-bs*="-group"][data-bs*="vertical"]:not([data-bs~="split"]) {
	--fieldset-bs: auto;
	--fieldset-grg: 0px;
}
fieldset[data-bs*="-group"][data-bs*="vertical"] label {
	block-size: var(--input-bs);
}
fieldset[data-bs*="-group"][data-bs~="vertical"]:not([data-bs~="split"]) label:not(:last-of-type) > span {
	--_bdw: 0 0 1px 0;
}

/* Auto Height */
fieldset[data-bs~="auto"] {
	--fieldset-bs: auto;
}

/* Inline and alignment */
fieldset[data-bs~="inline"] {
	--fieldset-d: inline-flex;
	--fieldset-is: auto;
}
fieldset[data-bs~="inline"][data-bs~="vertical"] {
	flex-direction: column;
}
fieldset[data-bs~="start"] { --_jc: start; }
fieldset[data-bs~="end"] { --_jc: end; }

/* Rounded */
fieldset[data-bs~="rounded"] {
	--button-group-bdi: 0px;
	--fieldset-bdrs: 2.5em;
	--fieldset-bdw: 2px;
	--fieldset-pab: 3px;
	--fieldset-pi: 3px;
}
fieldset[data-bs~="rounded"][data-bs~="small"] {
	--fieldset-bdrs: 1em;
	--fieldset-bdw: 1px;
  --fieldset-pab: 2px;
  --fieldset-pi: 2px;
}
fieldset[data-bs~="rounded"] :is(label, span) {
	--_bdrs: var(--fieldset-bdrs);
}

/* Split */
fieldset[data-bs~="split"] {
	--_bdrs: var(--fieldset-bdrs);
	--_bdw: 1px;
	--fieldset-bdw: 0px;
	--fieldset-gcg: var(--_gap);
	--fieldset-grg: var(--_gap);
}
fieldset[data-bs~="split"][data-bs~="rounded"] {
	--fieldset-bdw: 0px;
	--fieldset-pab: 0px;
	--fieldset-pi: 0px;
}
fieldset[data-bs~="split"][data-bs~="vertical"] {
	--fieldset-bs: auto;
}

/* Tags */
fieldset[data-bs~="tags"] {
	--fieldset-bs: auto;
	--label-is: auto;
	flex-wrap: wrap;
}
fieldset[data-bs~="tags"] span {
	--_pab: 0.25ch;
	--_pi: 1ch 0.5ch;
	white-space: nowrap;
}

/* Image Group */
/* use a `<div>` with image set as `--_mask:url()` */
[data-bs~="image-mask"] { 
	aspect-ratio: 1;
	background-color: currentColor;
	display: block;
	inline-size: 100%;
	-webkit-mask: var(--_mask);
	mask: var(--_mask);
}
/* OR use a regular image */
fieldset[data-bs~="column-group"] img {
	aspect-ratio: 1;
	pointer-events: none;
}
fieldset[data-bs~="column-group"] label {
	gap: 1ch;
	text-align: center;
}
fieldset[data-bs*="column"] input + span {
	align-items: start; 
	flex-direction: column;
	gap: 1.5ch;
	padding-block: 1ch;
	text-align: start;
	/* border: 1px var(--fieldset-bds) var(--fieldset-bdc);
	border-radius: var(--fieldset-bdrs);
	
	padding: .25em; */
}
fieldset[data-bs*="column"] input + span * { border: 0; }

fieldset[data-bs~="column-group"] strong { font-size: 2em; font-weight: 500; }

fieldset[data-bs~="offer-group"] {
	--fieldset-gtc: 1fr;
}

fieldset[data-bs~="offer-group"] label {
	grid-template-columns: min-content 1fr;
}



/* Input Spinner */
fieldset[data-bs~="input-spinner"] {
	--fieldset-bdw: 0px;
	--fieldset-d: flex;
	--fieldset-pab: 0px;
	--fieldset-pi: 0px;
	--input-tal: center;
}
fieldset[data-bs~="input-spinner"] button { 
	align-self: flex-end;
}

/* Tabs */


/* Tab Groups */
fieldset[data-bs*="tab-"] {
	--fieldset-bdrs: 0px;
  --fieldset-bdw: 0px 0px 1px 0px;
}
fieldset[data-bs*="tab-"]:not([data-bs~="rounded"]):not([data-bs~="split"]):not([data-bs~="vertical"]) label span { 
	border-radius: 4px 4px 0 0;
}
fieldset[data-bs~="tab-line-group"] :checked + span {
	background: transparent;
	border-block-end: 1px solid currentColor;
}

[data-bs~="tabs"] { inline-size: 100%; }
[data-bs~="tab-panels"] { padding-block-start: 1ch; }



/* Primart and Secondary Versions */
fieldset[data-bs~="primary"] {
	--buttongroup-checked-bg: var(--color-primary);
	--buttongroup-checked-c: var(--color-primary-text);
	--fieldset-bdc: var(--color-primary);
	--fieldset-c: var(--color-primary);
	--_bxsh: var(--color-primary-bxsh);
	--_hover-bg: var(--color-primary-light);
	--_hover-bg-checked: var(--color-primary-hover);
	--_hover-c-checked: var(--color-primary-text);
}
fieldset[data-bs~="secondary"] {
	--buttongroup-checked-bg: var(--color-secondary);
	--buttongroup-checked-c: var(--color-secondary-text);
	--fieldset-bdc: var(--color-secondary);
	--fieldset-c: var(--color-secondary);
	--_bxsh: var(--color-secondary-bxsh);
	--_hover-bg: var(--color-secondary-light);
	--_hover-bg-checked: var(--color-secondary-hover);
	--_hover-c-checked: var(--color-secondary-text);
} 

@media (hover: hover) {
	fieldset[data-bs*="-group"] input:not(:checked) ~ span:hover {
		--_bg: var(--_hover-bg);
	}
	fieldset[data-bs*="-group"] input:checked ~ span:hover {
		--_bg: var(--_hover-bg-checked);
		--_c: var(--_hover-c-checked);
	}
}
/* Focus */
fieldset[data-bs*="-group"] :focus-visible + span {
	--_bxshsz: .1875em;
}





/* Input Spinner */
/* :where(.bs-inputgroup-label) {
	--button-bgc: var(--gray-3);
	--button-c: initial;
	--fieldset-bdw: 1px;
	--input-bdw: 0;
	--input-tal: center;
	margin-block-start: 1.5em;
	padding: unset;
}
:where(.bs-inputgroup-label legend) {
	inset-block-end: calc(100% + var(--input-gap));
	position: absolute;
}
:where(.bs-inputgroup-label button) { --button-bdrs: 0; }
:where(.bs-inputgroup-label button:first-of-type) { border-inline-end: 1px solid var(--input-bdc); }
:where(.bs-inputgroup-label button:last-of-type) { border-inline-start: 1px solid var(--input-bdc); } */