/* === Dual Range === */
fieldset[data-bs~="dual-range"] label { pointer-events: none; }
fieldset[data-bs~="dual-range"] label:last-of-type {
	position: absolute;
	inset-block-start: 0;
}
fieldset[data-bs~="dual-range"] input {
	--input-range-progress-bg: none;
	--input-range-thumb-clp: none;
	--input-range-thumb-bxsh: transparent;
	pointer-events: none;
}
fieldset[data-bs~="dual-range"] input:first-of-type {
	--_x0: calc(1% * var(--v1, 25));
	--_x1: calc(1% * var(--v2, 75));
	--input-range-track-bg: linear-gradient(to var(--dir),
		var(--input-range-track-upper) var(--_x0),
		var(--input-range-track-lower) 0 var(--_x1),
		var(--input-range-track-upper) 0 100%
	);
}
fieldset[data-bs~="dual-range"] label:last-of-type > input {
	--input-range-track-bg: transparent;
}
:where([dir="rtl"] fieldset[data-bs~="dual-range"] input[type="range"])::-webkit-slider-thumb {
	--input-range-thumb-clp: none;
}
[data-bs~="dual-range"] input[type="range"]:focus-visible::-webkit-slider-thumb {
	box-shadow: var(--_bxsh--focus);
}

/* === Hue === */
input[type="range"][data-bs~="hue"] {
	--_s: 80%;
	--_l: 50%;
	--input-range-track-bg: linear-gradient(to var(--dir), 
		hsl(0, var(--_s), var(--_l)),
		hsl(30, var(--_s), var(--_l)),
		hsl(60, var(--_s), var(--_l)),
		hsl(90, var(--_s), var(--_l)),
		hsl(120, var(--_s), var(--_l)),
		hsl(150, var(--_s), var(--_l)),
		hsl(180, var(--_s), var(--_l)),
		hsl(210, var(--_s), var(--_l)),
		hsl(240, var(--_s), var(--_l)),
		hsl(270, var(--_s), var(--_l)),
		hsl(300, var(--_s), var(--_l)),
		hsl(330, var(--_s), var(--_l)),
		hsl(359, var(--_s), var(--_l))
	);
	--input-range-progress-bg: none;
	--input-range-track-bdrs: var(--input-bdrs);
	--input-range-track-bgsz: 100% 100%;
	--input-range-track-bs: var(--input-range-thumb-bs);
	--input-range-thumb-bd: 2px solid hsla(0, 0% , 0%, .5);
	--input-range-thumb-bxsh: transparent;
	--input-range-thumb-bg: hsl(0, 0%, 100%, .5);
}

/* === Transparent === */
input[type="range"][data-bs~="transparent"] {
	--input-range-progress-bg: none;
	--input-range-thumb-bd: 2px solid hsla(0, 0% , 0%, .5);
	--input-range-thumb-bg: hsla(0, 0%, 100%, .5);
	--input-range-thumb-bxsh: transparent;
	--input-range-track-bdrs: var(--input-bdrs);
	--input-range-track-bg: linear-gradient(to var(--dir), transparent, #FFF), var(--transparent);
	--input-range-track-bgr: no-repeat, repeat;
	--input-range-track-bgsz: 100% 100%, 0.5rem 0.5rem;
	--input-range-track-bs: 1em;
}

/* === HSL Component === */
[data-bs~="hsl"] {
	--_bg: hsl(var(--v1), calc(1% * var(--v2)), calc(1% * var(--v3)));
	--_c: color-contrast(var(--_bg) vs white, black);
	--color-accent: hsl(var(--v1), calc(1% * var(--v2)), 33%);
	--fieldset-bg: var(--_bg);
	--fieldset-bdw: 0;
	color: var(--_c);
	transition: color .66s ease-in;
}
[data-bs~="hsl"] input {
	--input-range-progress-bg: none;
	--input-range-track-bdrs: var(--input-bdrs);
	--input-range-track-bgsz: 100% 100%;
	--input-range-track-bs: var(--input-range-thumb-bs);
	--input-range-thumb-bd: 2px solid hsla(0, 0% , 0%, .5);
	--input-range-thumb-bxsh: transparent;
	--input-range-thumb-bg: hsla(0, 0%, 100%, .5);
}
[data-bs~="saturation"] { --input-range-track-bg: linear-gradient(to var(--dir), hsl(0, 0%, 50%), hsl(var(--v1), 50%, 50%)); }
[data-bs~="lightness"] { --input-range-track-bg: linear-gradient(to var(--dir), hsl(0, 0%, 0%), hsl(var(--v1), 100%, 50%), hsl(0, 0%, 100%)); }
[data-bs~="hsl"] legend {
	--legend-bdrs: inherit;
	--legend-bg: var(--_bg);
	--legend-pi: 1em;
	--legend-pab: .25em 0;
}

/* === Masked Ranges === */
input[type="range"][data-bs*="rating"] {
	--input-is: calc(var(--_symbolcount) * var(--_symbolsize));
	--input-range-thumb-bxsh: none;
	--input-range-thumb-clp: none;
	--input-range-thumb-bg: transparent;
	--input-range-thumb-bs: var(--_symbolsize);
	--input-range-thumb-is: var(--_symbolsize);
	--input-range-track-bs: var(--_symbolsize);
	--input-range-track-bg: transparent;

	--_fill: gold;
	--_fillbg: rgba(100, 100, 100, 0.15);
	--_symbol: var(--icon-star);
	--_symbolcount: 5;
	--_symbolsize: 3rem;

	--_bgi: linear-gradient(to var(--dir), var(--_fill) 0 var(--_x), var(--_fillbg) 0 var(--_x));
	--_mask: repeat left center/var(--_symbolsize) var(--_symbol);
	--_x: calc(100% * (var(--v, 3) / var(--_symbolcount)));
}
[data-bs*="rating"]::-moz-range-track {
	background: var(--_bgi);
	mask: var(--_mask);
}
[data-bs*="rating"]::-webkit-slider-runnable-track {
	background: var(--_bgi);
	mask: var(--_mask);
	-webkit-mask: var(--_mask);
}
[data-bs*="rating"]::-moz-range-progress { opacity: 0; }
[data-bs*="rating"]::-moz-range-thumb { opacity: 0; }
[data-bs*="rating"]::-webkit-slider-thumb { opacity: 0; }
/* --- Mask Variants --- */
input[type="range"][data-bs~="rating-hearts"] {
	--_symbol: var(--icon-heart);
	--_fill: #C8102E;
}
input[type="range"][data-bs~="rating-thumb"] {
	--_symbol: url(/svg/thumb.svg);
	--_fill: darkslategray;
}

/* === Circular Range Component === */
[data-bs~="circular-range"] {
	container-type: inline-size;
	cursor: grabbing;
	transform: rotate(-90deg);
}
[data-bs~="circular-range"] input {
	--_mask: radial-gradient(circle farthest-side at center, transparent calc(100% - var(--input-range-thumb-bs) - 1px), var(--input-range-track-lower) calc(100% - var(--input-range-thumb-bs)));
	--_rng: calc((var(--max, 100) - var(--min, 0)));
	--_unt: calc(100 / var(--_rng));
	--_x: calc(1% * var(--v) * var(--_unt));

	--input-bdrs: 50%;
	--input-bs: auto;
	--input-range-thumb-bg: transparent;
	--input-range-thumb-bxsh: none;
	--input-range-thumb-pe: none;
	--input-range-track-bg: none;

	aspect-ratio: 1;
	background-color: transparent;
	background-image: conic-gradient(var(--input-range-track-lower) var(--_x), var(--input-range-track-upper) 0 var(--_x));
	margin: 0;
	-webkit-mask: var(--_mask);
	mask: var(--_mask);
	pointer-events: none;
	transform: rotate(90deg);
}
[data-bs~="circular-range"] span {
	--_rng: calc((var(--max, 100) - var(--min, 0)));
	--_rad: calc(360deg / var(--_rng));
	block-size: calc(50% - var(--input-gap));
	color: transparent;
	inline-size: var(--input-range-thumb-bs);
	inset-block-start: 0;
	inset-inline-start: calc(50% - (var(--input-range-thumb-bs) / 2));
	pointer-events: none;
	position: absolute;
	transform: rotate(calc(90deg + (var(--_rad)) * var(--v)));
	transform-origin: bottom center;
	user-select: none;
	z-index: 1;
}
[data-bs~="circular-range"] span::before {
	aspect-ratio: 1;
	background-color: var(--color-accent);
	border-radius: 50%;
	box-shadow: 0 0 0 2px #FFF;
	content: '';
	
	display: block;
	margin-block-end: 1ch;
	transform: scale(1.25);
	width: 100%;
}
[data-output-value] {
	--output-fsz: 1em;
	block-size: 100%;
	display: grid;
	font-weight: 300;
	inline-size: 100%;
	inset-block-start: 0;
	inset-inline-start: 0;
	justify-items: center;
	place-content: center;
	pointer-events: none;
	position: absolute;
	transform: rotate(90deg);
}
[data-output-value]::after {
	content: attr(data-output-value);
	font-size: 20cqi;
	font-variant-numeric: tabular-nums;
	text-align: center;
}

/* === Circular Hue ===*/
[data-bs~="circular-range"][data-bs~="hue"] input {
	--_s: 100%;
	--_l: 50%;
	background-image: conic-gradient(
		hsl(0, var(--_s), var(--_l)),
		hsl(30, var(--_s), var(--_l)),
		hsl(60, var(--_s), var(--_l)),
		hsl(90, var(--_s), var(--_l)),
		hsl(120, var(--_s), var(--_l)),
		hsl(150, var(--_s), var(--_l)),
		hsl(180, var(--_s), var(--_l)),
		hsl(210, var(--_s), var(--_l)),
		hsl(240, var(--_s), var(--_l)),
		hsl(270, var(--_s), var(--_l)),
		hsl(300, var(--_s), var(--_l)),
		hsl(330, var(--_s), var(--_l)),
		hsl(359, var(--_s), var(--_l))
	);
}
[data-bs~="circular-range"][data-bs~="hue"] [data-bs~="range-output-attr"] {
	--_bg: hsl(var(--v), 100%, 50%);
	background-image: radial-gradient(
		hsl(var(--v), 100%, 50%) 15%, 
		hsl(var(--v), 100%, 95%)
	);
	border-radius: 50%;
	color: color-contrast(var(--_bg) vs white, black);
	transform: rotate(90deg) scale(0.9);
	z-index: -1;
}
[data-bs~="circular-range"][data-bs~="hue"] [data-bs~="range-output"]::before {
	background: transparent;
	box-shadow: 0 0 0 2px #222, 0 0 0 4px #ddd;
	transform: none;
}

/* === Compare Components */
[data-bs*="-compare"] {
	--_x: calc(1% * var(--v1));
	--fieldset-pab: 0px;
  --fieldset-pi: 0px;
	position: relative;
}
[data-bs*="-compare"] [type="range"] {
	--input-bs: 100%;
	--input-gap: 0;
	--input-range-thumb-bxsh: transparent;
	--input-range-thumb-bs: 100%;
	--input-range-thumb-bdrs: 0px;
	--input-range-thumb-is: 1rem;
	--input-range-track-bg: transparent;
}
[data-bs*="-compare"] label { display: contents; }
[data-bs*="-compare"] input::-moz-range-progress { opacity: 0; }

/* === Image Compare Component */
[data-bs~="image-compare"] > :is(img, input) {
	block-size: 100%;
	inline-size: 100%;
	inset: 0;
	position: absolute;
}
[data-bs~="image-compare"] img:first-of-type { clip-path: polygon(0% 0%, var(--_x) 0%, var(--_x) 100%, 0% 100%); }
[data-bs~="image-compare"] img:last-of-type { clip-path: polygon(100% 0%, var(--_x) 0%, var(--_x) 100%, 100% 100%); }

/* === Color Compare === */
[data-bs~="color-compare"] {
	--_bs: 1.5rem;
	--_x: calc(1% * var(--v1));
}
[data-bs~="color-compare"] img {
	inset-block-start: 0;
	pointer-events: none;
	position: relative;
}
[data-bs~="color-compare"] input { --input-gap: 0; }
[data-bs~="color-compare"] [type="color"] {
	--input-bs: var(--_bs);
	--input-bdrs: 0;
	--input-bdw: 0px;
	--input-pab: 0px;
	--input-pi: 0px;
	inset-block-end: 0;
	position: absolute;
}
[data-bs~="color-compare"] label:nth-of-type(1) [type="color"] { --input-is: var(--_x); inset-inline-start: 0; }
[data-bs~="color-compare"] label:nth-of-type(2) [type="color"] { --input-is: calc(100% - var(--_x)); inset-inline-start: var(--_x); }
[data-bs~="color-compare"] [type="color"]::-webkit-color-swatch { border: 0; }
[data-bs~="color-compare"] [type="range"] {
	--input-range-brgt-hover: 100%;
	--input-range-thumb-bg: linear-gradient(to right, var(--_c1) 50%, var(--_c2) 0 50%);
}
[data-bs~="color-compare"] :is(div, [type="range"]) {
	block-size: calc(100% - var(--_bs));
	inset: 0 0 var(--_bs) 0;
	position: absolute;
}
[data-bs~="color-compare"] div {
	background-image: linear-gradient(to right, var(--_c1) 0 var(--_x), var(--_c2) 0 var(--_x));
	-webkit-mask-image: var(--_mask);
	mask-image: var(--_mask);
	-webkit-mask-position: 0 0;
	mask-position: 0 0;
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-size: 100%;
	mask-size: 100%;
	mix-blend-mode: multiply;
}