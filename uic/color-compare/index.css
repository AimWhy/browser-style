/**
 * Color Compare
 * @param {image}   --_bdw - border width
 * @param {color}   --_bdc - border color
 * @param {length}  --_bdrs - border radius
 * @param {length}  --_c-bdrs - border radius of color-input
 * @param {length}  --_c-width - width of color-input
 * @param {image}   --_mask - mask image
 * @param {color}   --_thumb-bg - color of range-thumb
 * @param {length}  --_thumb-w - width of range-thumb
 * @description Compare two colors against a masked image
 */

 :where(fieldset[data-uic~="color-compare"]) {
	--_mask:url('/demo/colors-base.webp');

	border: var(--_bdw, var(--form-bdw)) solid var(--_bdc, var(--form-bdc));
	border-radius: var(--_bdrs, var(--form-bdrs));
	container-type: inline-size;
	display: grid;
	margin: 0;
	padding: 0;

	& img,
	& input {
		grid-column: 1 / -1;
		grid-row: 1 / -1;
		position: relative;
	}

	& img { width: 100%; }

	& input[type=color] {
		background: transparent;
		border: 0;
		margin: 1cqi;
		padding: 0;
		width: var(--_color-w, min(20cqi, 10em));

		&::-webkit-color-swatch,
		&::-webkit-color-swatch-wrapper {
			border: 0;
			border-radius: var(--_color-bdrs, var(--form-bdrs));
			padding: 0;
		}
	}

	& input[type=range] {
		appearance: none;
		background: transparent;
		margin: 0;
		touch-action: none;

		&::before {
			background-image: linear-gradient(to right, var(--_c1) 0 var(--_x), var(--_c2) 0 var(--_x));
			content: "";
			inset: 0;
			-webkit-mask: var(--_mask) no-repeat center / cover;
			mask: var(--_mask) no-repeat center / cover;
			mix-blend-mode: multiply;
			position: absolute;
		}

		&::-webkit-slider-runnable-track {
			height: 100%;
		}
		
		&::-webkit-slider-thumb {
			-webkit-appearance: none;
			appearance: none;
			background: var(--_thumb-bg, var(--form-bdc));
			cursor: ew-resize;
			height: 100%;
			position: relative;
			width: var(--_thumb-w, min(3cqi, 1.25em));
		}
	}

	& label {
		display: contents;
		&:has(input[type=color]):last-of-type input {
			justify-self: end;
		}
	}
}