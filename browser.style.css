@import url('browser.style.form.css');
@import url('browser.style.icons.css');

@import url('ui/grid/ui-grid.css');
@import url('ui/icon/ui-icon.css');

/* TODO! Needed? */
@import url('fx/animations.css');
@import url('browser.style.layout.css');

:root {
  --AccentColor: hsl(211, 100%, 50%);
  --AccentColorText: hsl(211, 100%, 95%);
  --ButtonBorder: color-mix(in oklab, Canvas 80%, CanvasText 20%);
  --ButtonFace: color-mix(in oklab, Canvas 90%, CanvasText 10%);
  --CanvasText: color-mix(in oklab, CanvasText 80%, Canvas 20%);
  --DarkGray: color-mix(in oklab, Canvas 40%, CanvasText 60%);
  --GrayCanvas: color-mix(in oklab, Canvas 95%, CanvasText 5%);
  --GrayHover: linear-gradient(90deg, transparent, color-mix(in oklab, Canvas 98%, CanvasText 2%), transparent);
  --GrayText: color-mix(in oklab, Canvas 60%, CanvasText 40%);
  --LinkText: color-mix(in oklab, LinkText 50%, #FFF 50%);
  --Mark: color-mix(in oklab, Mark 60%, Canvas 40%);
  --MarkText: color-mix(in oklab, MarkText 85%, Mark 15%);
  --VisitedText: color-mix(in oklab, VisitedText 60%, #FFF 40%);

  --AccentColorLight: color-mix(in srgb, var(--AccentColor), Canvas 80%);
  --ColorInfo: hsl(210, 60%, 46%);
  --ColorError: hsl(360, 60%, 46%);
  --ColorSuccess: hsl(136, 41%, 41%);
  --ColorWarning: hsl(33, 99%, 59%);

  --Shade-20: color-mix(in srgb, CanvasText, transparent 80%);
  --Shade-30: color-mix(in srgb, CanvasText, transparent 70%);

  --ff-body: Avenir, Montserrat, Corbel, 'URW Gothic', source-sans-pro, sans-serif;
  --ff-form: ui-sans-serif, system-ui;
  --ff-headers: inherit;
  --ff-mono: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace;
}
*, *::before, *::after {
  box-sizing: border-box;
}
:where(body) {
  accent-color: var(--AccentColor);
  background-color: Canvas;
  color: var(--CanvasText);
  color-scheme: light dark;
  font-family: var(--ff-body);
  font-size: clamp(1rem, 0.8661rem + 0.4286vw, 1.1875rem);
  line-height: 1.5;
  margin-inline: auto;
  max-inline-size: 85ch;
  padding-inline: 2ch;
  text-rendering: optimizeLegibility;
}
:where(a) {
  color: var(--LinkText);
  -webkit-tap-highlight-color: transparent;
  &:visited { color: var(--VisitedText); }
}
:where(abbr) {
  cursor: help;
  text-decoration: underline;
  text-decoration-style: dotted;
}
:where(audio) {
	&::-webkit-media-controls-panel {
		background: var(--GrayCanvas);
	}
}
:where(blockquote) {
  border-inline-start: .75ch solid var(--ButtonFace);
  padding-inline-start: 2ch;
}
:where(blockquote, dl, figure, h1, ol, p, pre, ul) {
  margin-block: 1rlh;
}
:where(pre, tr:nth-of-type(even)) {
  background-color: var(--ButtonFace);
}
:where(caption) {
  caption-side: bottom;
  font-size: smaller;
  font-style: italic;
  margin-block: 1rlh;
}
:where(del) { color: var(--ColorError); }
:where(dfn) {
  text-decoration: underline;
  text-decoration-style: double;
}
:where(dt) { font-weight: 700; }
:where(figcaption) { font-size: smaller; }
:where(h1, h2, h3, h4) {
  font-family: var(--ff-headers);
  line-height: 1.3;
  text-wrap: balance;
}
:where(h2) { margin-block: .75rlh; }
:where(hr) {
  border: solid var(--ButtonBorder);
  border-width: 1px 0 0;
  margin-block: .5rlh;
}
:where(img) {
  background-color: var(--GrayCanvas);
  height: auto;
  max-width: 100%;
}
:where(ins) { color: var(--ColorSuccess) }
:where(kbd) {
  background-color: var(--ButtonFace);
  font-size: smaller;
  padding: .33ch .66ch;
}
:where(mark) {
  background-color: var(--Mark, Mark);
  color: var(--MarkText, MarkText);
}
:where(pre) { overflow: auto; }
:where(summary:has(ui-icon)) {
  align-items: center;
  display: flex;
  list-style-type: none;
  &::-webkit-details-marker { display: none; }
}
:where(table) { border-collapse: collapse; }
:where(td) {
  border: 1px solid;
  font-size: smaller;
  padding: 1ch;
}

[hidden] { display: none; }

/* Screen Reader Only */
[data-sr] {
  border: 0;
  clip: rect(0 0 0 0); 
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap; 
  width: 1px;
}

/* Mixins */
@container style(--mixin-icon-after: true) {
  *::after {
    align-self: center;
    background: var(--icon-c, currentColor);
    content: "";
    display: inline-block;
    height: var(--icon-sz, 1em);
    margin-inline: var(--icon-mi, .25ch 0);
    mask: var(--icon) no-repeat center;
    -webkit-mask: var(--icon) no-repeat center;
    scale: var(--icon-flip, 1);
    width: var(--icon-sz, 1em);
  }
}
@container style(--mixin-icon-before: true) {
  *::before {
    align-self: center;
    background: var(--icon-c, currentColor);
    content: "";
    display: inline-block;
    height: var(--icon-sz, 1em);
    margin-inline: var(--icon-mi, 0 .25ch);
    mask: var(--icon) no-repeat center;
    -webkit-mask: var(--icon) no-repeat center;
    scale: var(--icon-flip, 1);
    width: var(--icon-sz, 1em);
  }
}

/* Dark Mode: */
@media (prefers-color-scheme: dark) {
  :root {
    --AccentColor: hsl(211, 60%, 50%);
    --ColorInfo: hsl(210, 30%, 46%);
    --ColorError: hsl(360, 40%, 56%);
    --ColorSuccess: hsl(136, 21%, 51%);
    --ColorWarning: hsl(33, 69%, 59%);
  }
}


/* Modifiers */
.--dark { color-scheme: dark; }
.--light { color-scheme: light; }
.--hide-scrollbar {
	scrollbar-width: none;
	&::-webkit-scrollbar { display: none; }
}

/* TODO! MOVE TO Colors */

.--blue-green {
  --ui-gradient: #0077ff, #00e7df, #0077ff;
  &:is(.--grow, .--shrink) { --ui-gradient: #0077ff, #0077ff; }
}
.--rainbow {
  --ui-gradient-bgsz-x: 120%;
  --ui-gradient: #ff3e41, #ff8a43, #ffeb7f, #00c9a7, #007ea7, #ff3e41;
}
.--red-orange {
  --ui-gradient: #ff1834, #ffc900, #ff1834;
  &:is(.--grow, .--shrink) { --ui-gradient: #ff1834, #ff1834; }
}
.--violet-pink {
  --ui-gradient: #7f00de, #ff007e, #7f00de;
}


:where(.--accent) {
  --_bg: var(--AccentColor);
  --hover-bg: color-mix(in srgb, var(--AccentColor), var(--CanvasText) 20%);
  background-color: var(--_bg);
  color: var(--AccentColorText);
}
.--accent-light {
  --hover-bg: color-mix(in srgb, var(--AccentColor), Canvas 60%);
  background-color: var(--AccentColorLight);
  color: var(--CanvasText);
}
.--black {
  --hover-bg: color-mix(in srgb, CanvasText, Canvas 25%);
  background-color: var(--CanvasText);
  color: Canvas;
}
.--error {
	--hover-bg: color-mix(in srgb, var(--ColorError), Canvas 60%);
	background-color: color-mix(in srgb, var(--ColorError), Canvas 80%);
	color: var(--ColorError);
}
.--gray-light {
  --hover-bg: color-mix(in srgb, var(--GrayCanvas), CanvasText 20%);
  background-color: var(--GrayCanvas);
  color: var(--CanvasText);
}
.--info {
	--hover-bg: color-mix(in srgb, var(--ColorInfo), Canvas 60%);
	background-color: color-mix(in srgb, var(--ColorInfo), Canvas 80%);
	color: var(--ColorInfo);
}
.--success {
  --_bg: var(--ColorSuccess);
	--hover-bg: color-mix(in srgb, var(--ColorSuccess), Canvas 60%);
	background-color: color-mix(in srgb, var(--ColorSuccess), Canvas 80%);
	color: var(--ColorSuccess);
}
.--warning {
	--hover-bg: color-mix(in srgb, var(--ColorWarning), Canvas 60%);
	background-color: color-mix(in srgb, var(--ColorWarning), Canvas 80%);
	color: var(--ColorWarning);
}
.--error-bg { background-color: var(--ColorError); }
.--info-bg { background-color: var(--ColorInfo); }
.--success-bg { background-color: var(--ColorSuccess); }
.--warning-bg { background-color: var(--ColorWarning); }
.--error-bg, .--info-bg, .--success-bg, .--warning-bg { color: #FFF; }

/* TODO! */
.h0 {
  font-size: 5em;
  font-weight: 900;
  letter-spacing: -0.05em;
  line-height: 1.1;
  margin: 0;
  text-wrap: pretty;
}
.--xxsmall { font-size: xx-small; }
.--xsmall { font-size: x-small; }
.--small { font-size: small; }
.--medium { font-size: medium; }
.--large { font-size: large; }
.--xlarge { font-size: x-large; }
.--xxlarge { font-size: xx-large; }
/* .--sm { width: 1em; }
.--md { width: 2em; }
.--lg { width: 3em; }
.--xl { width: 4em; } */