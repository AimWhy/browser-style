@layer bs-component {
	:where(.ui-tab-group) {
		--ui-tab-group-bdrs: 8px;
		--ui-tab-group-bdw: 4px;

		background: var(--ui-tab-group-bg, light-dark(#222, #EEE));
		border-radius: var(--ui-tab-group-bdrs);
		box-sizing: border-box;
		border: var(--ui-tab-group-bdw) solid #0000;
		color: var(--ui-tab-group-c, light-dark(#EEE, #222));
		display: grid;
		/* grid-template-columns: repeat(sibling-count() - 1, 1fr); */
		grid-auto-columns: 1fr;
		grid-auto-flow: column;
		padding: 0;
		position: relative;

		&::after {
			background: light-dark(#EEE, #444);
			border-radius: calc(var(--ui-tab-group-bdrs) - var(--ui-tab-group-bdw));
			content: "";
			height: 100%;
			mix-blend-mode: difference;
			pointer-events: none;
			position: absolute;
			transition: translate .25s ease-in;
			translate: calc(var(--_active) * 100%) 0;
			width: calc(100% / (sibling-count() - 1));
		}

		/* Can't we somehow use `sibling-index()` here? */
		&:has(label:nth-of-type(1) :checked) { --_active: 0; }
		&:has(label:nth-of-type(2) :checked) { --_active: 1; }
		&:has(label:nth-of-type(3) :checked) { --_active: 2; }
		&:has(label:nth-of-type(4) :checked) { --_active: 3; }

		label {
			display: block;
			/* grid-area: 1 / sibling-index() / 1 / span 1; */
			padding-block: var(--ui-tab-group-item-pb, 1ch);
			text-align: center;
			user-select: none;
		}
	}
}