:where(ui-datagrid) {
	display: block;
	& table { width: 100%; }

	/* Selectable */
	&[selectable] {
		& fieldset { display: contents; }
		& table {
			& label { display: contents; }
			& :is(td, th):has(label) {
				padding-block-end: 0;
				pointer-events: none;
				text-align: center;
				vertical-align: middle;
				& input {
					pointer-events: all;
				}
			}
			& tr:has(td):has(:checked) { background-color: var(--AccentColorLight); }
		}
	}

	& tr[aria-selected] td {
		--ui-table-td-hover: var(--AccentColor);
		background-color: var(--AccentColorLight);
	}

	/* Sorting */
	&[sortorder] {
		& th[tabindex] span {
			align-items: center;
			display: flex;
			gap: .5ch;
			justify-content: space-between;
			pointer-events: none;
			white-space: nowrap;
			&::after {
				background-image: linear-gradient(var(--_deg, 180deg), var(--_index, var(--ButtonBorder)) 0 50%, var(--ButtonBorder) 50%);
				clip-path: polygon(100% 40%, 50% 0%, 0% 40%, 100% 40%, 100% 60%, 0% 60%, 50% 100%, 100% 60%);
				content: "";
				display: inline-block;
				width: .7em;
				height: 1em;
			}
		}
	}
	&[sortorder="1"] { --_deg: 0deg; }
	&[sortindex="0"] th:nth-child(1),
	&[sortindex="1"] th:nth-child(2),
	&[sortindex="2"] th:nth-child(3),
	&[sortindex="3"] th:nth-child(4),
	&[sortindex="4"] th:nth-child(5),
	&[sortindex="5"] th:nth-child(6),
	&[sortindex="6"] th:nth-child(7),
	&[sortindex="7"] th:nth-child(8),
	&[sortindex="8"] th:nth-child(9) { --_index: currentColor; }
}