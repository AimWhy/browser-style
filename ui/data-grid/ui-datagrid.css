:where(ui-datagrid) {
	display: block;
	/* overflow: auto; */
	
	& [type=search] { margin-block-end: 1ch; }

	/* Formatters */
	& b { font-weight: 500; }
	& .dg-gray { color: var(--GrayText); }
	

	& form {
		align-items: center;
		display: grid;
		font-size: smaller;
		grid-auto-flow: column;
		margin-block: 1ch;
		& fieldset {
			all: unset;
			align-items: center;
			display: flex;
			gap: 1ch;
			
			&[name=navigation] {
				gap: 3ch;
				justify-self: end;
			}
			
			& button {
				--button-p: .25ch 1ch;
				font-size: small;
			}
			& label { all: unset; }
		
			& :is(input, select) {
				all: unset;
				border-block-end: 1px transparent; 
				font-size: inherit;
				&::-webkit-inner-spin-button { opacity: 1; }
				&:is(:focus,:focus-visible) { border-block-end: 1px dotted; } 
			}
		}
	}

	& table {
		width: 100%;

		& td { cursor: default; position: relative; }
		& th { cursor: pointer; }
		& td[data-old-value]::after {
			border-radius: 50%;
			content: "";
			display: block;
			width: .33em;
			height: .33em;
			background: var(--ColorWarning);
			position: absolute;
			right: 0.25em;
			top: .25em;
		}

		& td[contenteditable]:is(:focus,:focus-visible) {
			background: Canvas;
			color: CanvasText;
			outline: 2px solid var(--AccentColor);
			outline-offset: -2px;
		}

		& th[data-uid] {
			text-decoration: underline;
			text-decoration-style: dotted;
		}
	}

	/* Selectable */
	&[selectable] {
		& table {
			& label { display: contents; }
			& :is(td, th):has(label) {
				padding-block-end: 0;
				pointer-events: none;
				text-align: center;
				vertical-align: middle;
				& input {
					pointer-events: all;
				}
			}
			& tr:has(td):has(:checked) { background-color: var(--AccentColorLight); }
		}
	}

	& tr[aria-selected] td {
		--ui-table-td-hover: var(--AccentColor);
		background-color: var(--AccentColorLight);
	}

	/* Sorting */
	& th[tabindex] span {
		align-items: center;
		display: flex;
		gap: .5ch;
		pointer-events: none;
		white-space: nowrap;
		&::after {
			background-image: linear-gradient(var(--_deg, 180deg), var(--_index, var(--ButtonBorder)) 0 50%, var(--ButtonBorder) 50%);
			clip-path: polygon(100% 40%, 50% 0%, 0% 40%, 100% 40%, 100% 60%, 0% 60%, 50% 100%, 100% 60%);
			content: "";
			display: inline-block;
			margin-inline-start: auto;
			width: .7em;
			height: 1em;
		}
	}
	&[sortorder="1"] { --_deg: 0deg; }
	&[sortindex="0"] [data-sort-index="0"],
	&[sortindex="1"] [data-sort-index="1"],
	&[sortindex="2"] [data-sort-index="2"],
	&[sortindex="3"] [data-sort-index="3"],
	&[sortindex="4"] [data-sort-index="4"],
	&[sortindex="5"] [data-sort-index="5"],
	&[sortindex="6"] [data-sort-index="6"],
	&[sortindex="7"] [data-sort-index="7"],
	&[sortindex="8"] [data-sort-index="8"] { --_index: currentColor; }
}