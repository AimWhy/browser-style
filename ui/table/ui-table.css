@layer bs-component {
	:where(.ui-table) {
		--ui-table-bdrs: 0;
		--ui-table-bdw: 1px;
		--ui-table-col-hover: var(--ButtonFace);
		--ui-table-td-hover: var(--ButtonText);
		--ui-table-th-dark: var(--ButtonText);
		--ui-table-tr-hover: var(--ButtonFace);
		--ui-table-outline-bdc: var(--ButtonText);
		--ui-table-outline-bdw: 2px;

		border-collapse: separate;
		border-spacing: var(--ui-table-bdsp-x, 0) var(--ui-table-bdsp-y, 0);
		font-family: var(--ui-table-ff, inherit);
		font-size: var(--ui-table-fs, inherit);

		& :is(td, th) {
			border-block-width: var(--ui-table-bdw) 0;
			border-color: var(--ui-table-bdc, var(--ButtonBorder));
			border-inline-width: 0 var(--ui-table-bdw);
			border-style: solid;
			overflow: hidden;
			padding: var(--ui-table-p, .6ch 1.2ch);
			text-overflow: ellipsis;
			&:first-of-type { border-inline-start-width: var(--ui-table-bdw); }
		}
		& td {
			background: var(--ui-table-td-bg, inherit);
		}
		& th {
			background: var(--ui-table-th-bg, inherit);
			font-weight: 600;
			text-align: start;
			vertical-align: middle;
			&:first-of-type { border-start-start-radius: var(--ui-table-bdrs); }
			&:last-of-type { border-start-end-radius: var(--ui-table-bdrs); }
		}
		& tr {
			background: none;
			&:last-of-type {
				& td {
					border-block-end-width: var(--ui-table-bdw);
					&:first-of-type { border-end-start-radius: var(--ui-table-bdrs); }
					&:last-of-type { border-end-end-radius: var(--ui-table-bdrs); }
				}
			}
		}

		/* Modifiers */
		&.--block-border :is(td, th) { border-width: 0 0 var(--ui-table-bdw) 0; }
		&.--density-sm {
			--ui-table-ff: system-ui, sans-serif;
			--ui-table-fs: .875rem;
			--ui-table-p: .44ch .88ch;
		}
		&.--density-lg {
			--ui-table-fs: 1.25rem;
			--ui-table-p: .75ch 1.5ch;
		}
		&.--fixed { table-layout: fixed; }
		&.--no-border :is(td, th) { border: 0; }
		&.--no-wrap :is(td, th) { text-wrap: nowrap; }
		&.--rounded, .--rounded & { --ui-table-bdrs: .33rem; }
		&.--split-cols {
			--ui-table-bdsp-x: 2ch;
			margin-inline: calc(0px - var(--ui-table-bdsp-x));
			& :is(td, th) { border-inline-width: var(--ui-table-bdw) }
			&.--th-dark th {
				--ui-table-bdc: var(--ui-table-th-dark);
			}
			&.--rounded, .--rounded & {
				& tr:first-of-type th {
					border-radius: var(--ui-table-bdrs) var(--ui-table-bdrs) 0 0
				}
				& tr:last-of-type td {
					border-radius: 0 0 var(--ui-table-bdrs) var(--ui-table-bdrs)
				}
			}
		}
		&.--split-rows {
			--ui-table-bdsp-y: 1.5ch;
			margin-block: calc(0px - var(--ui-table-bdsp-y));
			& :is(td, th) { border-block-width: var(--ui-table-bdw) }
		}
		&.--th-dark th {
			--ui-table-th-bg: var(--ui-table-th-dark);
			border-block-color: var(--ui-table-th-dark);
			color: Canvas;
			&:first-of-type { border-inline-start-color: var(--ui-table-th-dark); }
			&:last-of-type { border-inline-end-color: var(--ui-table-th-dark); }
		}
		&.--zebracol-even col:nth-of-type(even),
		&.--zebracol-odd col:nth-of-type(odd),
		&.--zebrarow-even tr:nth-of-type(even) td,
		&.--zebrarow-odd tr:nth-of-type(odd) td { --ui-table-td-bg: var(--ui-table-zebra-bgc, var(--CanvasGray)); }
		&:is(.--th-light, .--zebrarow-even) th { --ui-table-th-bg: var(--ui-table-zebra-bgc, var(--CanvasGray)); }

		/* Hover */
		@media (hover: hover) {
			&.--hover-all,
			&.--hover-col {
				&:has(:is(td,th):nth-child(1):is(:focus-visible,:hover)) col:nth-child(1),
				&:has(:is(td,th):nth-child(2):is(:focus-visible,:hover)) col:nth-child(2),
				&:has(:is(td,th):nth-child(3):is(:focus-visible,:hover)) col:nth-child(3),
				&:has(:is(td,th):nth-child(4):is(:focus-visible,:hover)) col:nth-child(4),
				&:has(:is(td,th):nth-child(5):is(:focus-visible,:hover)) col:nth-child(5),
				&:has(:is(td,th):nth-child(6):is(:focus-visible,:hover)) col:nth-child(6),
				&:has(:is(td,th):nth-child(7):is(:focus-visible,:hover)) col:nth-child(7),
				&:has(:is(td,th):nth-child(8):is(:focus-visible,:hover)) col:nth-child(8),
				&:has(:is(td,th):nth-child(9):is(:focus-visible,:hover)) col:nth-child(9) {
					background-color: var(--ui-table-col-hover);
				}
			}
			&.--hover-col-outline {
				& :is(td,th) {
					position: relative;
					&::after {
						border-inline: var(--ui-table-outline-bdw) solid transparent;
						border-radius: inherit;
						content: '';
						inset: calc(0px - var(--ui-table-bdw)) 0 0 0;
						position: absolute;
					}
				}
				& tr:first-of-type th::after { border-block-start: var(--ui-table-outline-bdw) solid transparent; }
				& tr:last-of-type td::after { border-block-end: var(--ui-table-outline-bdw) solid transparent; }

				&:has(:is(td,th):nth-child(1):is(:focus-visible,:hover)) :is(td,th):nth-child(1),
				&:has(:is(td,th):nth-child(2):is(:focus-visible,:hover)) :is(td,th):nth-child(2),
				&:has(:is(td,th):nth-child(3):is(:focus-visible,:hover)) :is(td,th):nth-child(3),
				&:has(:is(td,th):nth-child(4):is(:focus-visible,:hover)) :is(td,th):nth-child(4),
				&:has(:is(td,th):nth-child(5):is(:focus-visible,:hover)) :is(td,th):nth-child(5),
				&:has(:is(td,th):nth-child(6):is(:focus-visible,:hover)) :is(td,th):nth-child(6),
				&:has(:is(td,th):nth-child(7):is(:focus-visible,:hover)) :is(td,th):nth-child(7),
				&:has(:is(td,th):nth-child(8):is(:focus-visible,:hover)) :is(td,th):nth-child(8),
				&:has(:is(td,th):nth-child(9):is(:focus-visible,:hover)) :is(td,th):nth-child(9) {
					&::after {
						border-color: var(--ui-table-outline-bdc);
					}
				}
			}
			&.--hover-all,
			&.--hover-td {
				td:is(:focus-visible,:hover) {
					--ui-table-bdc: var(--ui-table-td-hover);
					--ui-table-td-bg: var(--ui-table-td-hover);
					color: var(--Canvas);
					outline: 0;
				}
			}
			&.--hover-td-outline {
				& td:is(:focus-visible,:hover) {
					outline: var(--ui-table-outline-bdw) solid var(--ui-table-outline-bdc);
					outline-offset: calc(0px - var(--ui-table-bdw));
				}
			}
			&.--hover-all,
			&.--hover-th-outline {
				& th:is(:focus-visible,:hover) {
					cursor: pointer;
					outline: var(--ui-table-outline-bdw) solid var(--ui-table-outline-bdc);
					outline-offset: calc(0px - var(--ui-table-outline-bdw));
					user-select: none;
					.--th-dark & {
						--ui-table-outline-bdc: var(--CanvasGray);
						outline-offset: calc(0px - (3 * var(--ui-table-outline-bdw)));
					}
				}
			}
			&.--hover-all,
			&.--hover-tr {
				tr:has(td:is(:focus-visible,:hover)) {
					--ui-table-td-bg: var(--ui-table-tr-hover);
					&.--hover-td & td:not(:is(:focus-visible,:hover)) { --ui-table-td-bg: var(--ui-table-td-hover); }
				}
			}
			&.--hover-tr-outline {
				& tr:has(td):hover {
					outline: var(--ui-table-outline-bdw) solid var(--ui-table-outline-bdc);
					outline-offset: calc(0px - var(--ui-table-outline-bdw));
				}
			}
		}
	}

	/* Overflow Wrapper. Class `--overflowing` should be added to the wrapper when content (table) is overflowing. */
	:where(.ui-table-wrapper) {
		overflow: auto;
		scrollbar-color: var(--ButtonBorder) #0000;
		scrollbar-width: thin;
		&.--overflowing {
			border: 1px solid var(--ButtonBorder);
			border-radius: var(--ui-table-bdrs, 0);
			table {
				& tr:first-of-type th { border-block-start-width: 0; }
				& :is(td,th):first-of-type { border-inline-start-width: 0; }
				& :is(td,th):last-of-type { border-inline-end-width: 0; }
			}
			&.--rounded {
				--ui-table-bdrs: .33rem;
				& :is(tr:last-of-type) td { --ui-table-bdrs: 0; }
			}
			/* Sticky Columns */
			[data-sticky-cols] & table, table[data-sticky-cols] {
				--ui-table-td-bg: var(--Canvas);
				&.--c0 :is(td,th):nth-of-type(1),
				&.--c1 :is(td,th):nth-of-type(2),
				&.--c2 :is(td,th):nth-of-type(3),
				&.--c3 :is(td,th):nth-of-type(4),
				&.--c4 :is(td,th):nth-of-type(5),
				&.--c5 :is(td,th):nth-of-type(6),
				&.--c6 :is(td,th):nth-of-type(7),
				&.--c7 :is(td,th):nth-of-type(8),
				&.--c8 :is(td,th):nth-of-type(9) {
					inset-inline-start: var(--_iis);
					position: sticky;
					z-index: 1;
				}
				&.--c0 :is(td,th):nth-of-type(1) { --_iis: var(--c0); }
				&.--c1 :is(td,th):nth-of-type(2) { --_iis: var(--c1); }
				&.--c2 :is(td,th):nth-of-type(3) { --_iis: var(--c2); }
				&.--c3 :is(td,th):nth-of-type(4) { --_iis: var(--c3); }
				&.--c4 :is(td,th):nth-of-type(5) { --_iis: var(--c4); }
				&.--c5 :is(td,th):nth-of-type(6) { --_iis: var(--c5); }
				&.--c6 :is(td,th):nth-of-type(7) { --_iis: var(--c6); }
				&.--c7 :is(td,th):nth-of-type(8) { --_iis: var(--c7); }
				&.--c8 :is(td,th):nth-of-type(9) { --_iis: var(--c8); }
			}
		}
	}
}