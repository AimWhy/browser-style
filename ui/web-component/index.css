:host {
  display: block;
  padding: 1.5em; /* Increased padding */
  border: 2px solid steelblue; /* Changed border to match p color */
  margin-bottom: 1em;
  font-family: sans-serif;
  background-color: #f0f8ff; /* AliceBlue background */
  border-radius: 8px; /* Added rounded corners */
}

p { /* This targets <p> tags inside the component's template */
  color: steelblue;
  margin-top: 0;
}

::slotted(p) { /* This targets <p> tags passed into a slot */
  color: #333;
  font-style: italic;
  margin: 0.5em 0;
}


:host([render-mode="dom"]) {
  border-color: green;
  background-color: #f0fff0; /* Honeydew background for DOM mode */
}
:host([render-mode="dsd"]) {
  border-color: purple;
  background-color: #e6e6fa; /* Lavender background for DSD mode */
}
:host([styles="none"]) {
  border-style: dashed;
  border-color: orange;
  background-color: #fffaf0; /* FloralWhite background for styles="none" */
}
:host([styles="./another.css"]) { /* Adjusted to match the example path */
  /* Styles from another.css will override these if more specific or loaded after,
     but this provides a base if another.css doesn't style the border itself.
     However, another.css *does* style the border, so this might not be visible
     unless another.css is changed or fails to load.
     For clarity, specific styling for this case is often better handled by the target CSS file.
     Let's assume this is a fallback or an additional visual cue.
  */
  border-color: teal; 
}
