:host, gui-panel {
	--gui-panel-gap: .5rem;
	--gui-panel-m: 1rem;
	--gui-panel-w: 265px;
	--gui-panel-rz-block: 12px;
	--gui-panel-rz-inline: 6px;

	background: var(--gui-panel-bg, Canvas);
	border: 0;
	color: var(--gui-panel-c, CanvasText);
	color-scheme: light dark;
	container-type: inline-size;
	font-family: var(--gui-panel-ff, system-ui, sans-serif);
	font-size: var(--gui-panel-fs, 1rem);
	grid-template-columns: var(--gui-panel-rz-inline) 1fr var(--gui-panel-rz-inline);
	grid-template-rows: var(--gui-panel-rz-block-start, var(--gui-panel-rz-inline)) min-content minmax(0, 1fr) var(--gui-panel-rz-block-end, 6px);

	inset-block: var(--gui-panel-y, var(--gui-panel-m)) auto;
	inset-inline: var(--gui-panel-x, calc(100% - var(--gui-panel-w) - var(--gui-panel-m))) auto;
	padding: 0;
	max-height: calc(100dvh - (2 * var(--gui-panel-m)));
	min-height: min-content;
	touch-action: none;
	user-select: none;
	-webkit-user-select: none;
	width: var(--gui-panel-w);
}

:host(:popover-open), gui-panel:popover-open { display: grid }

:host([popover]), gui-panel[popover] {
	border-radius: var(--gui-panel-bdrs, 10px);
	box-shadow: var(--gui-panel-bxsh, 0px 8px 56px 0px color-mix(in srgb, CanvasText, transparent 70%));
	height: var(--gui-panel-h, auto);
}

:where(:host([popover]), gui-panel[popover]) slot[name="external"],
:where(:host(:not([popover])), gui-panel:not([popover])) slot[name="sidebar"] {
	display: none;
}

:host(:not([popover])), gui-panel:not([popover]) {
	display: grid;
	header {
		display: flex;
		justify-content: end;
		[part="title"],
		[part~="close"] { display: none; }
	}
}

/* parts */
[part~="content"] {
	grid-area: 3 / 1 / 4 / 4;
	padding: 2ch;
	overflow: auto;
}
[part~="header"] {
	align-items: center;
	display: grid;
	grid-area: 2 / 2 / 3 / 3;
	grid-template-columns: 1fr 2fr 1fr;
	min-height: min-content;
}
[part~="icon"] {
	fill: none;
	pointer-events: none;
	stroke: currentColor;
	stroke-linecap: round;
	stroke-linejoin: round;
	stroke-width: 2;
}
[part~="icon-button"] {
	all: unset;
	border-radius: 50%;
	height: 1.25rem;
	padding: var(--gui-panel-rz-inline);
	width: 1.25rem;
}
[part~="icon-group"] {
	display: flex;
}
[part~="jc-end"] {
	justify-content: end;
}
[part~="title"] {
	cursor: move;
	text-align: center;
}

/* position */
:host([position~="bottom"]), gui-panel[position~="bottom"] { 
	inset-block: var(--gui-panel-y, calc(100dvh - var(--gui-panel-h) - var(--gui-panel-m))) auto;
}
:host([position~="center"]), gui-panel[position~="center"] {
	inset-inline: var(--gui-panel-x, calc(50vw - (var(--gui-panel-w) / 2))) auto;
}
:host([position~="left"]), gui-panel[position~="left"] {
	inset-inline: var(--gui-panel-x, var(--gui-panel-m)) auto;
}

/* resize */
[part~="resize-block-start"],
[part~="resize-block-end"] {
	block-size: 0;
	cursor: ns-resize;
	display: grid;
	justify-items: center;
	overflow: clip;
}
[part~="resize-block-start"]::before {
	align-self: end;
}
[part~="resize-block-start"]::before,
[part~="resize-block-end"]::before {
	background: #CCC8;
	border-radius: 40px;
	content: '';
	height: calc(var(--gui-panel-rz-block) / 2);
	width: 80px;
}
[part~="resize-block-start"] {
	grid-area: 1 / 1 / 2 / 4;
	place-self: start center;
}
[part~="resize-block-end"] {
	grid-area: 4 / 1 / 5 / 4;
	place-self: end center;
}
:host([resize~="block-end"]), gui-panel[resize~="block-end"] {
	--gui-panel-rz-block-end: var(--gui-panel-rz-block);
}
:where(:host([resize~="block-end"]), gui-panel[resize~="block-end"]) [part~="resize-block-end"] { block-size: var(--gui-panel-rz-block); }
:host([resize~="block-start"]), gui-panel[resize~="block-start"] {
	--gui-panel-rz-block-start: var(--gui-panel-rz-block);
}
:where(:host([resize~="block-start"]), gui-panel[resize~="block-start"]) [part~="resize-block-start"] {
	block-size: var(--gui-panel-rz-block);
}

:where(:host([resize~="inline-start"]), gui-panel[resize~="inline-start"]) [part~="resize-inline-start"],
:where(:host([resize~="inline-end"]), gui-panel[resize~="inline-end"]) [part~="resize-inline-end)"] {
	cursor: ew-resize;
}
[part~="resize-inline-start"] { grid-area: 1 / 1 / 4 / 2; }
[part~="resize-inline-end"] { grid-area: 1 / 3 / 4 / 4; }

/* media */
@media (prefers-color-scheme: light) {
	:host(.cs),
	gui-panel.cs { color-scheme: dark; }
}
@media (prefers-color-scheme: dark) {
	:host(.cs),
	gui-panel.cs { color-scheme: light; }
}
@media (hover:hover) {
	[part~="icon-button"]:hover { background: #CCC4; }
}